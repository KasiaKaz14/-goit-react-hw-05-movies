{"version":3,"file":"static/js/881.84fdb355.chunk.js","mappings":"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","sources":["SearchMovies/api.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd3144e85ee72b64927195b1f7c37d3bd',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchTranding = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const searchByName = async name => {\n  return axios\n    .get(`/search/movie?query=${name}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const searchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const searchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const searchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\",\"list\":\"Movies_list__hqYjd\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { searchByName } from 'SearchMovies/api';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [name, setName] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchparams] = useSearchParams('');\n  const location = useLocation();\n\n  const searchName = searchParams.get('name');\n\n  useEffect(() => {\n    if (searchName) {\n      searchByName(searchName).then(setMovies);\n    }\n  }, [searchName]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const response = await searchByName(name);\n    setMovies(response);\n    setSearchparams({ name });\n    setName('');\n  };\n\n  const onChange = e => {\n    setName(e.target.value);\n  };\n\n  return (\n    <>\n      <div className={css.container}>\n        <form onSubmit={handleSubmit} className={css.form}>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={onChange}\n            className={css.input}\n          />\n          <button type=\"submit\" className={css.button}>\n            Search\n          </button>\n        </form>\n      </div>\n      {movies.length > 0 && (\n        <ul className={css.list}>\n          {movies.map(({ id, title, poster }) => (\n            <li key={id} className={css.movie_item}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                className={css.movie_link}\n              >\n                <img src={poster} alt={title} className={css.movie_img} />\n                <h3 className={css.movie_tittle}>{title}</h3>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","api_key","include_adult","IMG_URL","searchTranding","then","data","results","map","id","title","poster","poster_path","catch","error","console","log","message","searchByName","name","searchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","searchMovieCredits","cast","character","profile_path","searchMovieReviews","author","content","useState","setName","movies","setMovies","useSearchParams","searchParams","setSearchparams","location","useLocation","searchName","get","useEffect","handleSubmit","e","preventDefault","response","className","css","onSubmit","type","value","onChange","target","length","to","state","from","src","alt"],"sourceRoot":""}